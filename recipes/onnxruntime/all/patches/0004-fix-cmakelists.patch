diff --git a/cmake/CMakeLists.txt b/cmake/CMakeLists.txt
index a5d28fb516..59cc17d108 100644
--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -527,6 +527,11 @@ if (NOT MSVC AND NOT (CMAKE_SYSTEM_NAME STREQUAL "iOS"))
   set(CMAKE_REQUIRED_FLAGS ${OLD_CMAKE_REQUIRED_FLAGS})
 endif()
 
+if (${CMAKE_SYSTEM_PROCESSOR} MATCHES
+   "(riscv32)|(riscv64)")
+   set(onnxruntime_LINK_LIBATOMIC true)
+endif()
+
 set(REPO_ROOT ${PROJECT_SOURCE_DIR}/..)
 set(ONNXRUNTIME_ROOT ${PROJECT_SOURCE_DIR}/../onnxruntime)
 set(ORTTRAINING_ROOT ${PROJECT_SOURCE_DIR}/../orttraining)
@@ -1746,6 +1746,10 @@ if (BUILD_PKGCONFIG_FILES)
     ${CMAKE_INSTALL_LIBDIR}/pkgconfig )
 endif()
 
+install(DIRECTORY ${PROJECT_SOURCE_DIR}/../include/onnxruntime/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/onnxruntime)
+install(DIRECTORY ${PROJECT_SOURCE_DIR}/../onnxruntime/core/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/onnxruntime/core FILES_MATCHING PATTERN "*.h")
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/onnxruntime_config.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/onnxruntime)
+
 if (onnxruntime_BUILD_OPSCHEMA_LIB AND onnxruntime_ENABLE_TRAINING)
   # opschema library requires training ops as well
   include(onnxruntime_opschema_lib.cmake)
